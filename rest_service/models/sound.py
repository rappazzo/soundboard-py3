# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rest_service.models.base_model_ import Model
from rest_service import util


class Sound(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name=None, names=None, tag=None):  # noqa: E501
        """Sound - a model defined in Swagger

        :param name: The name of this Sound.  # noqa: E501
        :type name: str
        :param names: The names of this Sound.  # noqa: E501
        :type names: List[str]
        :param tag: The tag of this Sound.  # noqa: E501
        :type tag: str
        """
        self.swagger_types = {
            'name': str,
            'names': List[str],
            'tag': str
        }

        self.attribute_map = {
            'name': 'name',
            'names': 'names',
            'tag': 'tag'
        }
        self._name = name
        self._names = names
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Sound of this Sound.  # noqa: E501
        :rtype: Sound
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this Sound.


        :return: The name of this Sound.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Sound.


        :param name: The name of this Sound.
        :type name: str
        """

        self._name = name

    @property
    def names(self):
        """Gets the names of this Sound.


        :return: The names of this Sound.
        :rtype: List[str]
        """
        return self._names

    @names.setter
    def names(self, names):
        """Sets the names of this Sound.


        :param names: The names of this Sound.
        :type names: List[str]
        """

        self._names = names

    @property
    def tag(self):
        """Gets the tag of this Sound.


        :return: The tag of this Sound.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this Sound.


        :param tag: The tag of this Sound.
        :type tag: str
        """

        self._tag = tag
